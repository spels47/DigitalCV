{
  "ofExperience": "of experience",
  "topBar": {
    "dashboard": "dashboard",
    "contact": "contact patrick",
    "education": "Education & Certificates",
    "references": "References",
    "darkMode": "Toggle dark mode",
    "languagePicker": "Change language"
  },
  "dashboard": {
    "about": "About patrick",
    "content1": "Hello üòÅ i'm a {age} year old full stack developer from Larvik, Norway. I take pride in my work, and like to work on my deliveries until im proud of what i deliver. I strive to improve myself professionally regardless of how good i might get at what i do.",
    "content2": "I'm an objective thinker, that is good at identifying issues and actively work on solutions. I like to work closely with the product department and pitch ideas for changes or improvements as i do get creative inspirations while implementing the spec provided to me.",
    "content3": "Outside the workplace i spend time with friends, watch movies, play pathfinder, enjoy documentaries and play video games. I like spending time on game development and other creative side projects.",
    "content4": "I was first introduced to programming when i went to a community college back in 2016, and fell in love with game development that year. I learned to use programming for more business related purposes when i entered Get Academy in 2019, and have a total experience with programming of {experience},",
    "content5": "but i have {experience} experience, working with programming professionally"
  },
  "hobbiesList": {
    "title": "Hobbies & Spare time activities",
    "hobbyHeader": "Hobbies",
    "gameDevelopment": "Game Development",
    "streaming": "Streaming"
  },
  "gameDevelopment": {
    "title": "Game Development",
    "content1": "I first learned how to do game development when i went to Bjerkely Folkeh√∏yskole in 2016-2017. While there i learned how to program C# in the Unity engine, and how to use the Unity engine in general. I also learned the basics of 3d modeling using Blender, and texturing 3d models, that includes creating textures that simulate 3d using bump maps and has metadata on how light interacts with the texture using diffusion maps etc. The projects i made that year is gone since i didnt work with any technology that kept backups during that time.",
    "content2": "But i did make some games since i left school, i made a mobile game that i had hosted on Google Play store for a limited time until it was removed by google, it was called FlurryTurry and it was a relatively fun tower defence game i had made.",
    "content3": "The reason why the game was taken down from the Google Play store was because i had used an SDK a package of tools for making the builds of my mobile game that also included tools for in app purchase functionality, not that i knew about this or had used these tools, but since they were part of the toolset that the game was built with, Google thought my game had in app purchases in it. And since i hadnt declared any in app purchases Google took down the game. So it was taken down over a misunderstanding, however i managed to corrupt the projects files when i accidentally updated Unity to a beta version, which made it impossible to fix this and create another build of the game sadly.",
    "content4": "I also made a Console App text adventure game called Ogrevent, which is available for download",
    "here": "here",
    "content5": "Game development is something i find fun, but it is very time consuming and difficult to do alone so its not something i get around to very often anymore."
  },
  "pathfinder": {
    "title": "Pathfinder",
    "content1": "Pathfinder is a",
    "tabletopLink": "tabletop roleplaying game",
    "content2": "most people who have heard of some form of tabletop roleplaying game, has heard of Dungeons & Dragons.",
    "content3": "Pathfinder is like Dungeons & Dragons only it has different rules.",
    "content4": "Me and some friends occasionally get together, maybe every other weekend, and we roll dice and have a good time playing Pathfinder together."
  },
  "streaming": {
    "title": "Streaming",
    "content1": "Occasionally i stream games on twitch, its just something i do because i think its fun, and its not something that i do in a professional capacity or would ever like to do in a professional capacity."
  },
  "technicalList": {
    "title": "Technical Competencies",
    "codeLanguageHeader": "Code Languages",
    "technologyHeader": "Technologies",
    "frameworkHeader": "Frameworks",
    "methodologyHeader": "Methodologies",
    "packageManagerHeader": "Package managers"
  },
  "angularJs": {
    "title": "AngularJS",
    "content": "I have experience with an older version of AngularJS from my time in ABAX, where i used to do maintenance and bugfixing that occasionally involved fixing things that didnt work as expected in the frontend. So during that time i became very familiar with AngularJS."
  },
  "bootstrap": {
    "title": "Bootstrap",
    "content": "Bootstrap is the first styling focused library i ever used. I learned about it in Get Academy first, but also used it in ABAX for a time. However it is worth mentioning that the Bootstrap i used in ABAX was highly customized and not vanilla Bootstrap."
  },
  "csharp": {
    "title": "Csharp",
    "content1": "I learned C# in 2016-2017 when i went to Bjerkely Folkeh√∏yskole, where i studied game development. There were many different roles that could be chosen when it comes to game development. A game typically contains images, animations, 3d models or 2d sprites, sound effects, music and of course code that dictates the behaviour and interactability of the game. And it was the code, the programming that caught my interest the most. So i spent the majority of my time that year learning to write C# in the Unity game engine.",
    "content2": "After my year at Bjerkely i still did some occasional game development, but few of the projects i worked on became anything functional as i didnt have any artists or animators or sound engineers to work with, so even if i could get the code working, my motivation began to suffer pretty quickly when i realised that i was unable to make the game look and sound good on my own.",
    "content3": "In 2019 when i went to Get Academy i learned more about C# for business purposes and creating REST api's with .net framework. I would learn even more about this when i would later that year begin as an intern in ABAX and would maintain and fix bugs in their WebApi which was .net framework, but would later also interact with api's in modern .net core I have also used C# to consume and emit events over Message Queues (RabbitMQ) during my time in ABAX. I have also written a lot of Unit tests and Integration tests in XUnit, using Substitutes for external services and data providers when writing Unit tests.",
    "content4": "I have also made a Console App text adventure game that is available on my github profile."
  },
  "docker": {
    "title": "Docker",
    "content": "I learned Docker when i started in ABAX, i have used it to write Dockerfiles for containerization of apps, i have also used it for docker-compose. I familiarised myself with the build and run commands and some of its different flags. I have also used the Docker desktop GUI."
  },
  "googleFirebase": {
    "title": "Google Firebase",
    "content": "I used google firebase as database technology of choice when working on the dating app that was comissioned while i went to Get Academy. In that database i stored things like user credentials and profile pictures, and other user information."
  },
  "javascript": {
    "title": "Javascript",
    "content1": "I learned Javascript when i started at Get Academy in 2019, And have only used it in context of creating web clients (web pages)",
    "content2": "The first real project that i used javascript on was when Get Academy was comissioned to make a proof of concept for a dating app, that i was delegated to work on. The first iteration was made using only javascript, html and css, i would later refactor this to work with Vue, and bootstrap which was the first time i used frameworks.",
    "content3": "During my time in ABAX i also used Javascript when maintining or creating solutions for the different web clients there, and learned and developed my skills with Javascript there."
  },
  "kanban": {
    "title": "Kanban",
    "content": "Throughout my time in ABAX i have tracked my task in Kanban boards. I have used Jira and Gitlab boards primarily to track the tasks i personally work on. But have also used Monday but primarily Monday is a place where roadmap items were tracked which is often big long term tasks, that the tasks i tracked in Gitlab represented a small part of."
  },
  "mongoDb": {
    "title": "MongoDB",
    "content1": "I first used MongoDB in ABAX, during that time i learned to use tools like Mongo Compass and Studio 3T. As well as using the Mongo Shell on occasion. During my time using MondoDB i have learned:",
    "listItem1": "How to use the C# driver",
    "listItem2": "How to create new Indexes including {TTL} indexes {TTLText}",
    "listItem3": "How to write queries using the C# driver",
    "content2": "I have also used MongoDB in a personal project to store pdf documents as base64 string"
  },
  "mssql": {
    "title": "Mssql",
    "content1": "I first learned the basics of sql querying language when i went to Get Academy. I got a deeper understanding of the querying language when worked at ABAX. During my time at ABAX i have written complicated queries, i have learned about:",
    "listItem1": "Indexes",
    "listItem2": "How to hit indexes",
    "listItem3": "How to measure performance",
    "listItem4": "How to improve performance in queries",
    "listItem5": "How to link databases",
    "listItem6": "How to use temp tables",
    "listItem7": "How to set up transactions and using them for both comitting or rolling back changes",
    "content2": "I personally prefer Relational Database technologies over Document Database technologies in general, but both have their strengths and weaknesses."
  },
  "npm": {
    "title": "Node Package Manager (NPM)",
    "content": "Node Package Manager is the primary package manager i have used for all frontend applications i have worked on. And as such i have learned various commands with it, but also learned how to create my own custom commands where i string together multiple commands for easy use using && syntax between the commands."
  },
  "nuget": {
    "title": "NuGet",
    "content": "NuGet is the primary package manager that i have used for installing and updating package dependencies for .net projects."
  },
  "paket": {
    "title": "Paket",
    "content": "I have used paket to install dependencies for a .net project that had paket as its way of fetching packages. Paket was also used to lock versions of packages in that project and it was all very legacy, things would break and stop working if packages were updated to latest version. An unfortunate side effect of the projects Legacy state at the time, However this would gradually improve over time. So my experience with Paket is rather isolated to that project."
  },
  "rabbitMq": {
    "title": "RabbitMQ",
    "content": "I have used RabbitMQ to consume and emit messages in C# backends, i have also used the RabbitMQ GUI where i have looked at error messages in error queues and learned the difference between nack and ack. I have also learned how to move messages from one queue to another using that interface."
  },
  "ravenDb": {
    "title": "RavenDB",
    "content": "I have only used RavenDB a little bit, i have used it to alter some documents in the web interface, and also download and upload collections."
  },
  "scrum": {
    "title": "Scrum",
    "content": "While working in ABAX we followed the SCRUM framework for project management, We would hold Standup meetings in the mornings, taking turns explaining what we did yesterday and if we were stuck on something / needed help from somebody on the team with something. We would estimate our tasks and break the bigger tasks into smaller, more easy to define in technical steps needed to finish, tasks. Then we would work with those smaller tasks in our Kanban board. We would also hold weekly meetings with the teams Business Analyst in order to look at progress and also to look at specs for upcoming tasks and plan forward for when different new tasks should start being worked on."
  },
  "typescript": {
    "title": "Typescript",
    "content1": "I have only used Typescript a little bit, i have a basic understanding of it. I used Typescript on occasion when i worked on a pretty big frontend refactor project for ABAX, for some specific components that required this. However for the most part i used Javascript during my time on that project.",
    "content2": "Still i do have some experience with Typescript, so i wouldnt be starting from scratch should i encounter it again in the future."
  },
  "visualBasic": {
    "title": "Visual Basic",
    "content": "I have only used Visual Basic to maintain Legacy code bases, but have in that time made bugfixes to a SOAP api and written Unit tests. I have also converted large quanities of Visual Basic code to C#."
  },
  "vueRouter": {
    "title": "Vue Router",
    "content1": "Vue Router is an optional package for Vue applications. It makes it easy to route between different pages within the application, making it possible to have the application be a {SPA} {SPAText} easily. Most modern pages are a form of {SPA} application as loading a full web page just to navigate to a different place on the same web page is very much a thing of the past.",
    "content2": "Every Vue project i have worked on has used Vue Router, including this one!"
  },
  "vue": {
    "title": "Vue",
    "content1": "Vue is the first framework i learned how to use, and it is also my favorite framework out of all the frameworks of its kind that i have had the pleasure of experiencing throughout my career. I used it first in a refactor of a dating app i was working on back when i went to Get Academy. Then i used it in some learning projects where my focus was primarily on learning technologies other than Vue. Some time after this i used the framework while working on a project focused on refactoring our frontend from old AngularJS to new Vue3 for ABAX. After this project i worked on maintenance and feature development for internal tools that also used Vue for its frontend.",
    "content2": "I am primarily familiar with writing Vue in the options api, but have a basic understanding of the compositions api also.",
    "content3": "This web page is also written in Vue!"
  },
  "vuetify": {
    "title": "Vuetify",
    "content1": "Vuetify was the framework we used for our internal tooling in ABAX, its a framework that has really grown on me.",
    "content2": "This page was also written using Vuetufy!"
  },
  "vuex": {
    "title": "Vuex",
    "content1": "Vuex is a global stateholder that is an optional addon for Vue applications. I heard about this back in Get Academy but didn't really start using it before i started working with the internal tools project in ABAX. But i am glad that i did and i am a big fan of it now that i am familiar with it.",
    "content2": "This web page also used Vuex!"
  },
  "yarn": {
    "title": "Yarn",
    "content": "I used Yarn for a short period of time for installing the dependencies for the frontend to a project because if you installed those dependencies with NPM it wouldnt work for reasons we never investigated deeper. But we found that if you installed those dependencies with Yarn it would work just fine, so we just used that for that specific project, until one day when NPM worked with that project as well. This was pretty early in my internship with ABAX."
  },
  "contact": {
    "contactByEmail": "Contact me by Email",
    "subject": "Subject",
    "messageBody": "Message body",
    "sendEmail": "Send email",
    "contactInfo": "Contact info",
    "phoneLabel": "Phone number",
    "emailLabel": "Email"
  },
  "education": {
    "title": "Education & Certificates",
    "highSchool": "High School",
    "codeBootcamp": "Code Bootcamp"
  },
  "references": {
    "title": "References"
  }
}